<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>css on OPdbg</title>
    <link>https://www.codetea.top/tags/css/</link>
    <description>Recent content in css on OPdbg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 07 Feb 2022 16:17:59 +0800</lastBuildDate><atom:link href="https://www.codetea.top/tags/css/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSS3样式 笔记</title>
      <link>https://www.codetea.top/posts/css3-style/</link>
      <pubDate>Mon, 07 Feb 2022 16:17:59 +0800</pubDate>
      
      <guid>https://www.codetea.top/posts/css3-style/</guid>
      <description>CSS3样式 # 盒子 # 与盒子模型相关的一些样式属性
圆角 # 复合属性
div{ width:100px; height:100px; border-radius:2px; /* 四个圆角值均为2px */ border-radius:2px 4px; /* 左上角与右下角为2px，右上角和左下角为4px */ border-radius:2px 4px 3px; /* 左上角为2px，右上角和左下角为4px，右下角为3px */ border-radius:2px 4px 3px 1px; /* 左上角为2px，右上角为4px，右下角为3px，左下角为1px */ } 复合属性分开书写
div{ width:100px; height:100px; border-top-left-radius:2px; border-top-right-radius:4px; border-bottom-right-radius:3px; border-bottom-left-radius:1px; } 盒阴影 # .box1{ width:100px; height:100px; box-shadow:10px 5px blue; /* 设置竖直偏移10px 水平偏移5px的蓝色盒阴影 */ } .box2{ width:100px; height:100px; box-shadow:10px 5px 3px blue; /* 设置竖直偏移10px 水平偏移5px 模糊半径3px的蓝色盒阴影 */ } .box3{ width:100px; height:100px; box-shadow:10px 5px 3px 6px blue; /* 设置竖直偏移10px 水平偏移5px 模糊半径3px 扩散半径6px的蓝色盒阴影 */ } .</description>
    </item>
    
    <item>
      <title>CSS3基础 笔记</title>
      <link>https://www.codetea.top/posts/css3-basic/</link>
      <pubDate>Mon, 07 Feb 2022 16:17:53 +0800</pubDate>
      
      <guid>https://www.codetea.top/posts/css3-basic/</guid>
      <description>CSS3基础 # 选择器 # 基础选择器 # section &amp;gt; div{ /* 子元素选择器 */ color:#ffffff; } .brother + div{ /* 相邻兄弟元素选择器 */ color:#ff0000; } .brother ~ div{ /* 通用兄弟元素选择器 */ color:#00ff00; } div, p, section, .brother, #id{ /* 群组选择器 */ color:#0000ff; } 属性选择器 # a[href]{ color:#000000; } a[href=&amp;#34;http://www.baidu.com&amp;#34;]{ /* 元素属性值 */ color:#666666; } input[value~=&amp;#34;password&amp;#34;]{ /* 元素包含指定属性值 */ color:#333333; } input[value^=&amp;#34;pass&amp;#34;]{ /* 元素开头属性值 */ color:#223333; } input[value$=&amp;#34;rd&amp;#34;]{ /* 元素结尾属性值 */ color:#222233; } input[value*=&amp;#34;word&amp;#34;]{ /* 元素属性值包含 */ color:#222222; } input[name|=&amp;#34;use&amp;#34;]{ /* 元素属性值-开头 */ color:#454545; } 伪类选择器 # 动态伪类 # 不存在于HTML中，只有当用户和网站交互的时候才能体现出来</description>
    </item>
    
    <item>
      <title>CSS选择器 笔记</title>
      <link>https://www.codetea.top/posts/css-selector/</link>
      <pubDate>Mon, 07 Feb 2022 15:55:54 +0800</pubDate>
      
      <guid>https://www.codetea.top/posts/css-selector/</guid>
      <description>选择器 # 标签选择器
a{ text-decoration:none; } class选择器
.class{ font-size:24px; color:#666; } ID选择器
#id{ line-height:30px; background-color:#666; } 全局选择器
*{ margin:0; padding:0; border:none; } 群组选择器
a,.class,#id{ font-size:20px; } 后代选择器
div a{ color:#000; } 拓展应用：组合使用多种选择器
伪类选择器 # 特点
定义特殊状态下的样式 无法使用标签、id、class及其他属性实现 [[CSS3-basic#伪类选择器|伪类]]
链接
a:active{/*链接激活*/ color:#fff; } a:visited{/*链接已访问*/ color:#00ff00; } a:link{/*链接未访问*/ color:#ff0000; } a:hover{/*鼠标悬停*/ color:#0000ff; } 顺序：link&amp;gt;visited&amp;gt;hover&amp;gt;active
说明：伪类对大小写不敏感、link和visited顺序无所谓
active和hover可以适用其他元素
注意：兼容性问题
样式 # ==单位== # 绝对单位
不能根据浏览器或父元素大小的改变而改变
in、cm、mm、pt、pc 属性xx-small、x-small、small、medium、large、x-large、xx-large 相对单位
px(受分辨率影响)、em/%(相对于父元素 继承计算值) 属性值：large、smaller(相对父元素) 字体 # p{ font-family:&amp;#34;微软雅黑&amp;#34;;/* 字体 */ font-size:16px;/* 字体大小 */ color:#000; /* 前景颜色 */ font-weight:normal; /* 字体粗细 */ font-style:normal; /* 字体样式 */ font-variant:small-caps; /* 字体变形 */ } h1{ font:italic normal bolder 24px/32px Serif; /* 注意书写顺序：font-style font-variant font-weight(顺序任意) font-size/line-height font-family 不设置自己单独下载的字体 */ } 文字 # p{ text-indent:2em; text-align:center;/* 水平对齐 对于块级元素进行设置，可以继承*/ line-height:24px;/* 可以继承、继承是继承计算值*/ } span{ vertical-align:middle;/* 对于行内元素和单元格元素进行设置 文字基线 */ } p{ word-spacing:1px;/* 单词间距 */ letter-spacing:0.</description>
    </item>
    
    <item>
      <title>CSS进阶 笔记</title>
      <link>https://www.codetea.top/posts/css-up/</link>
      <pubDate>Mon, 07 Feb 2022 15:55:47 +0800</pubDate>
      
      <guid>https://www.codetea.top/posts/css-up/</guid>
      <description>CSS进阶 # 盒子模型 # 盒子模型用来“放”网页中的各种元素
网页设计中内容，如文字、图片等元素， 都可是盒子（div嵌套）
生活中的盒子：
padding内填充 border边框 margin外边距 物体content内容：
width宽 height高 属性 # div{ width:80%; max-width:1000px; min-width:300px; height:auto; max-height:1000px; min-height:300px; border-width:medium; border-color:red; border-style:solid; /* 内边距的属性值不能为负值 */ padding:20px; /* 4个方向都是20px */ padding:20px 40px; /* 上下=20px 左右=40px */ padding:20px 40px 10px; /* 上=20px 左右=40px 下=10px */ padding:20px 30px 10px 40px; /* 上=20px 右=30px 下=10px 左=40px */ margin:20px; margin:20px 40px; margin:20px 40px 10px; margin:20px 30px 10px 40px; /* 垂直方向，两个相邻元素都设置外边距，外边距会发生合并 合并后外边距高度=两个发生合并外边距的高度中最大值 */ } 宽高属性总结</description>
    </item>
    
    <item>
      <title>CSS基础 笔记</title>
      <link>https://www.codetea.top/posts/css-basic/</link>
      <pubDate>Mon, 07 Feb 2022 15:55:42 +0800</pubDate>
      
      <guid>https://www.codetea.top/posts/css-basic/</guid>
      <description>CSS基础 # Cascading Style Sheets 层叠样式表
发展历史 # 1996W3C：CSS1
1998W3C：CSS2
现在W3C：CSS3
特点 # CSS简化[[HTML]]相关标签，网页体积小，下载快 解决内容与表现相分离的问题 更好地维护网页，提高工作效率 样式规则 # 选择器，声明（声明有属性和值构成）不区分大小写
书写规范：
书写采用小写书写
每一个属性占一行
注释：
/*注释*/ 使用方法
行内样式表（内联样式表） [同时加载]
&amp;lt;h1 style=&amp;#34;attribute:value&amp;#34;&amp;gt; title &amp;lt;/h1&amp;gt; 内部样式表 [同时加载]
&amp;lt;head&amp;gt; &amp;lt;style type=&amp;#34;text/css&amp;#34;&amp;gt; *{ margin:0; border:none; padding:0; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt; title &amp;lt;/h1&amp;gt; &amp;lt;/body&amp;gt; 外部样式表（外联样式表）：
创建CSS文件（扩展名是.css)、引用CSS样式 [html加载时，同时加载CSS]
&amp;lt;head&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; type=&amp;#34;text/css&amp;#34; href=&amp;#34;style.css&amp;#34; /&amp;gt; &amp;lt;/head&amp;gt; 外部样式表的优势：
css与html分离 多个文件可以同时使用一个样式文件 多文件引用同一个css文件，css只需下载一次 导入式 (不推荐使用) [先html后css]
&amp;lt;style type=&amp;#34;text/css&amp;#34;&amp;gt; @import &amp;#34;style.css&amp;#34;; @import url(style.</description>
    </item>
    
  </channel>
</rss>
